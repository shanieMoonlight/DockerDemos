name: Movies - Docker Image CI

on:
  push:
    branches: [ "master" ]
    paths:
      - 'Apps/Movies/**'
  pull_request:
    branches: [ "master" ]
    paths:
      - 'Apps/Movies/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: shaneyboy/movies-api   # <-- single source of truth

    steps:
    - uses: actions/checkout@v4
  

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.0.x'

    - name: Restore solution
      run: dotnet restore

    - name: Build solution
      run: dotnet build --configuration Release --no-restore

    - name: Run unit tests
      run: dotnet test Movies.Tests/Movies.Tests.csproj --configuration Release --no-build --logger "trx;LogFileName=test_results.trx"

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: movies-test-results-${{ github.run_id }}
        path: Movies.Tests/TestResults/**/*.trx
        retention-days: 21

    - name: Publish Movies.API
      run: dotnet publish Apps/Movies/Movies.API/Movies.API.csproj -c Release -o ./out/Apps/Movies/Movies.API --no-build

    # - name: Create runtime .dockerignore in published output
    #   run: |
    #     mkdir -p ./out/Apps/Movies/Movies.API
    #     cat > ./out/Apps/Movies/Movies.API/.dockerignore <<'EOF'
    #     # Keep published output minimal for Docker build context
    #     **/.git
    #     **/.gitignore
    #     **/.vs
    #     **/.vscode
    #     **/obj
    #     **/bin
    #     **/*.pdb
    #     **/*.cache
    #     Dockerfile*
    #     EOF

    # - name: Log in to Docker Hub
    #   uses: docker/login-action@v3
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}


    # - name: Build and push image (from published output)
    #   uses: docker/build-push-action@v4
    #   with:
    #     context: .
    #     file: ./Dockerfile.movies.workflow   create a simple runtime Dockerfile in this folder
    #     push: true
    #     tags: shaneyboy/movies-api:latest

    - name: Log in to Docker Hub
      id: docker_build
      uses: shanieMoonlight/git-actions/actions/docker-build-push-multiple-tags@master
      with:
        docker_username: ${{ secrets.DOCKERHUB_USERNAME }}
        docker_password: ${{ secrets.DOCKERHUB_TOKEN }}
        image_name: ${{ env.IMAGE_NAME }}
        dockerfile: ./Dockerfile.movies.workflow
        context: .
        push: 'true'


    - name: Show tags (debug)
      run: |
        echo "===== TAGS OUTPUT (from composite action) ====="
        echo "${{ steps.docker_build.outputs.tags }}"
        echo "=============================================="


